---
import GitHub from "./icons/GitHub.astro";
import NextJS from "./icons/NextJS.astro";
import Tailwind from "./icons/Tailwind.astro";
import SqlServer from "./icons/SqlServer.astro";
import React from "./icons/React.astro";
import Php from "./icons/Php.astro";
import Spring from "./icons/Spring.astro";
import Angular from "./icons/Angular.astro";
import Java from "./icons/Java.astro";
import Nodejs from "./icons/NodeJS.astro";
import Express from "./icons/Express.astro";
import AstroDev from "./icons/Astro5.astro";
import Flowbite from "./icons/Flowbite.astro";
import Bootstrap from "./icons/Bootstrap.astro";
import Link from "./icons/Link.astro";
import LinkButton from "./LinkButton.astro";

// iconos = https://svgl.app/?search=spring

const TAGS = {
  BOOTSTRAP: {
    name: "Bootstrap",
    class: "bg-[#003159] text-white",
    icon: Bootstrap,
  },
  FLOWBITE: {
    name: "Flowbite",
    class: "bg-[#003159] text-white",
    icon: Flowbite,
  },
  ASTRODEV: {
    name: "AstroDev",
    class: "bg-[#003159] text-white",
    icon: AstroDev,
  },
  EXPRESS: {
    name: "Express",
    class: "bg-[#003159] text-white",
    icon: Express,
  },
  NODEJS: {
    name: "Nodejs",
    class: "bg-[#003159] text-white",
    icon: Nodejs,
  },
  NEXT: {
    name: "Next.js",
    class: "bg-[#003159] text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  REACT: {
    name: "React",
    class: "bg-[#003159] text-white",
    icon: React,
  },
  SQLSERVER: {
    name: "SqlServer",
    class: "bg-[#003159] text-white",
    icon: SqlServer,
  },
  PHP: {
    name: "Php",
    class: "bg-[#003159] text-white",
    icon: Php,
  },
  JAVA: {
    name: "Java",
    class: "bg-[#003159] text-white",
    icon: Java,
  },
  SPRING: {
    name: "Spring",
    class: "bg-[#003159] text-white",
    icon: Spring,
  },
  ANGULAR: {
    name: "Angular",
    class: "bg-[#003159] text-white",
    icon: Angular,
  },
};
const PROJECTS = [
  {
    title: "Pagina web - Pasteleria",
    modalidad: "Individual",
    description:
      "Desarrollé una página web personalizada para una pastelería utilizando React y Flowbite. La plataforma incluye un catálogo de productos atractivo y funcional, donde los usuarios pueden explorar una amplia variedad de productos de pastelería con imágenes de alta calidad y descripciones detalladas. Además, la página está optimizada para ser completamente responsive, garantizando una experiencia de usuario fluida y agradable en dispositivos móviles, tabletas y computadoras de escritorio.",
    link: "https://beluguerreiropasteleria.vercel.app/",
    github: "https://github.com/mag0/Belicias2.0",
    image: "/img/belicias.png",
    tags: [TAGS.REACT, TAGS.FLOWBITE],
  },
  {
    title: "MovieMania",
    modalidad: "Individual",
    description:
      "Desarrollé una aplicación de películas utilizando React para el frontend y la API de TMDB para obtener la información de las películas. La aplicación muestra una lista detallada de películas, con sus títulos, imágenes y descripciones. Utilicé Tailwind y Flowbite para diseñar una interfaz de usuario moderna y visualmente atractiva. Los datos se obtuvieron dinámicamente desde la API de TMDB, garantizando información actualizada y precisa. Esta aplicación proporciona una experiencia de usuario fluida y atractiva, combinando tecnologías modernas para lograr una interfaz intuitiva y visualmente agradable.",
    link: "https://movie-mania-navy.vercel.app/",
    github: "https://github.com/mag0/MovieMania",
    image: "/img/moviemania.png",
    tags: [TAGS.REACT, TAGS.TAILWIND, TAGS.FLOWBITE],
  },
  {
    title: "Preguntados",
    modalidad: "Grupal",
    description:
      "Desarrollé una aplicación web tipo Preguntados utilizando PHP y SQL. Los usuarios pueden iniciar partidas, responder preguntas y guardar su puntaje. La aplicación permite recomendar preguntas, que son revisadas por un usuario con rol de editor. Además, un usuario con rol de administrador puede visualizar todas las estadísticas de los jugadores en gráficos temporales.",
    github: "https://github.com/mag0/ProyectoFinalWeb2",
    image: "/img/preguntados.jpg",
    tags: [TAGS.PHP, TAGS.SQLSERVER, TAGS.BOOTSTRAP],
  },
  {
    title: "Gestion de flota vehicular",
    modalidad: "Grupal",
    description:
      "Desarrollé una aplicación web de gestión de flotas utilizando Spring y SQL Server. Cada usuario puede gestionar su propia flota de vehículos, tomar pedidos y asignarlos a los vehículos a través de la web. La aplicación también incluye un mapa en tiempo real que muestra los viajes de los vehículos.",
    github: "https://github.com/mag0/ProyectoTallerWeb",
    image: "/img/gestionVehicular.jpg",
    tags: [TAGS.JAVA, TAGS.SPRING, TAGS.SQLSERVER, TAGS.BOOTSTRAP],
  },
  {
    title: "Aplicacion de lista de tareas",
    modalidad: "Grupal",
    description:
      "Desarrollé una aplicación web de gestión de tareas utilizando Angular para el frontend y una API RESTful creada con Node.jsy Express en el backend. La aplicación permite a los usuarios crear, leer, actualizar y eliminar tareas, las cuales se almacenan en memoria en el backend. Los usuarios pueden gestionar sus listas de tareas de manera intuitiva y eficiente a través de una interfaz web interactiva.",
    github: "https://github.com/mag0/TPTallerWeb2",
    image: "/img/webTareas.jpg",
    tags: [TAGS.ANGULAR, TAGS.NODEJS, TAGS.EXPRESS, TAGS.FLOWBITE],
  },
  {
    title: "Lista de Personajes de DragonBall",
    modalidad: "Individual",
    description:
      "Desarrollé una aplicación de personajes utilizando Astro para el frontend y la API de DragonBall para obtener la información de los personajes. La aplicación muestra una lista detallada de personajes, con sus nombres, imágenes y descripciones. Obtuve los datos dinámicamente desde la API de Pokémon, garantizando información actualizada y precisa. Esta aplicación proporciona una experiencia de usuario fluida y atractiva, combinando tecnologías modernas para lograr una interfaz intuitiva y visualmente agradable.",
    link: "https://dragonball-api-web.vercel.app/",
    github: "https://github.com/mag0/PokemonWeb",
    image: "/img/pokemonWeb.png",
    tags: [TAGS.ASTRODEV, TAGS.FLOWBITE],
  },
];
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(
      ({ image, title, modalidad, description, tags, link, github }) => (
        <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
          <div class="w-full md:w-1/2">
            <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 shadow-xl overflow-hidden rounded-xl sm:rounded-xl lg:border lg:border-gray-800">
              <img
                alt="Recién llegado vs 5 años en Nueva Zelanda"
                class="object-cover object-center w-full h-full"
                loading="lazy"
                src={image}
              />
            </div>
          </div>

          <div class="w-full md:w-1/2 md:max-w-lg">
            <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
              {title}
            </h3>
            <h4 style="color: rgb(246, 113, 113);">Desarrollo {modalidad}</h4>
            <div class="flex flex-wrap mt-2">
              <ul class="flex flex-row mb-2 gap-x-2">
                {tags.map((tag) => (
                  <li>
                    <span
                      class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                    >
                      <tag.icon class="size-4" />
                      {tag.name}
                    </span>
                  </li>
                ))}
              </ul>

              <div class="mt-2 text-gray-700 dark:text-gray-400">
                {description}
              </div>
              <footer class="flex items-end justify-start mt-4 gap-x-4">
                {github && (
                  <LinkButton href={github}>
                    <GitHub class="size-6" />
                    Codigo
                  </LinkButton>
                )}
                {link && (
                  <LinkButton href={link}>
                    <Link class="size-4" />
                    Web
                  </LinkButton>
                )}
              </footer>
            </div>
          </div>
        </article>
      )
    )
  }
</div>
